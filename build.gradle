plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.flywaydb.flyway" version "8.2.0"
}

group = 'co.spaece'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(18)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext {
	set('springAiVersion', "1.0.0-M1")
}

dependencies {
	implementation platform("org.springframework.ai:spring-ai-bom:1.0.0-SNAPSHOT")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.ai:spring-ai-vertex-ai-gemini-spring-boot-starter'
	implementation 'com.google.cloud:google-cloud-aiplatform:2.9.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	user = mysqlUser
	password = mysqlPassword
	url = dbUrl
	locations = ["filesystem:$migrationDir"]
	sqlMigrationPrefix = appContext
	baselineOnMigrate = true
	outOfOrder = true //to allow migration of lower than current version
	placeholderPrefix = '$$}' //allow expressions in html template stored in database
}
